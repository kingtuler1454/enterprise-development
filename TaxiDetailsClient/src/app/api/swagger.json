{
  "openapi": "3.0.1",
  "info": {
    "title": "TaxiDetails.WebApi",
    "version": "1.0"
  },
  "paths": {
    "/api/Car": {
      "get": {
        "tags": [
          "Car"
        ],
        "summary": "return list of users",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Car"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Car"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Car"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Car"
        ],
        "summary": "add new car",
        "requestBody": {
          "description": "object of car.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CarDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CarDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          }
        }
      }
    },
    "/api/Car/{id}": {
      "get": {
        "tags": [
          "Car"
        ],
        "summary": "return car of identificator",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "identificator of car",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Car"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Car"
        ],
        "summary": "replace car of identificator",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "identificator of car",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "new exemplar of car.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CarDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CarDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CarDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Car"
        ],
        "summary": "delete car",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "identificator of delete car",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Driver": {
      "get": {
        "tags": [
          "Driver"
        ],
        "summary": "return all drivers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Driver"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Driver"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Driver"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Driver"
        ],
        "summary": "add new driver",
        "requestBody": {
          "description": "Object of driver for add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DriverDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DriverDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DriverDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Driver"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver"
                }
              }
            }
          }
        }
      }
    },
    "/api/Driver/{id}": {
      "get": {
        "tags": [
          "Driver"
        ],
        "summary": "return driver of identificator",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "identificator of driver",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Driver"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Driver"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Driver"
        ],
        "summary": "replace driver of identificator.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "identificator of driver",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "new driver",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DriverDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DriverDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DriverDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Driver"
        ],
        "summary": "delete driver of collection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "identificator of driver",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Travel": {
      "get": {
        "tags": [
          "Travel"
        ],
        "summary": "return travel",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Travel"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Travel"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Travel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Travel"
        ],
        "summary": "add new trip",
        "requestBody": {
          "description": "object travel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TravelDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TravelDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TravelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Travel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Travel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Travel"
                }
              }
            }
          }
        }
      }
    },
    "/api/Travel/{id}": {
      "get": {
        "tags": [
          "Travel"
        ],
        "summary": "return information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "identificator travel",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Travel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Travel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Travel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Travel"
        ],
        "summary": "replace travel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "identificator of travel.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "new object of travel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TravelDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TravelDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TravelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Travel"
        ],
        "summary": "Удаляет поездку с указанным идентификатором из коллекции.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "identificator of travel",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "return list user",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "add user",
        "requestBody": {
          "description": "object of user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "information of user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "identificator of user",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "replace user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "identificator  of user",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "new user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "delete user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "identificator user",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Car": {
        "required": [
          "assignedDriver"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "plate": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "assignedDriver": {
            "$ref": "#/components/schemas/Driver"
          }
        },
        "additionalProperties": false
      },
      "CarDto": {
        "required": [
          "color",
          "model",
          "plate"
        ],
        "type": "object",
        "properties": {
          "plate": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "number list of car"
          },
          "model": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "model car"
          },
          "color": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "color"
          },
          "assignedDriverId": {
            "type": "integer",
            "description": "identificator of driver",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object for car information."
      },
      "Driver": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "patronymic": {
            "type": "string",
            "nullable": true
          },
          "passport": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DriverDto": {
        "required": [
          "address",
          "name",
          "passport",
          "patronymic",
          "phone",
          "surname"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "name driver"
          },
          "surname": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "surname driver"
          },
          "patronymic": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "patronymic driver"
          },
          "passport": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "passport information"
          },
          "address": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "addres"
          },
          "phone": {
            "minLength": 1,
            "type": "string",
            "description": "number of phone",
            "format": "tel"
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object for driver information."
      },
      "TimeSpan": {
        "type": "object",
        "properties": {
          "ticks": {
            "type": "integer",
            "format": "int64"
          },
          "days": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hours": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "milliseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "microseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "nanoseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "minutes": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "seconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalDays": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalHours": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMilliseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMicroseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalNanoseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMinutes": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalSeconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Travel": {
        "required": [
          "assignedCar",
          "client"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "departurePoint": {
            "type": "string",
            "nullable": true
          },
          "destinationPoint": {
            "type": "string",
            "nullable": true
          },
          "tripDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "travelTime": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "cost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "assignedCar": {
            "$ref": "#/components/schemas/Car"
          },
          "client": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": false
      },
      "TravelDto": {
        "required": [
          "cost",
          "departurePoint",
          "destinationPoint",
          "travelTime",
          "tripDate"
        ],
        "type": "object",
        "properties": {
          "departurePoint": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "from"
          },
          "destinationPoint": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "to"
          },
          "tripDate": {
            "type": "string",
            "description": "date of travel",
            "format": "date-time"
          },
          "travelTime": {
            "$ref": "#/components/schemas/TimeSpan"
          },
          "cost": {
            "minimum": 0.01,
            "type": "number",
            "description": "cost",
            "format": "double"
          },
          "assignedCarId": {
            "type": "integer",
            "description": "identificator of car",
            "format": "int32"
          },
          "clientId": {
            "type": "integer",
            "description": "identificator of client",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object for travel information."
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserDto": {
        "required": [
          "fullName",
          "phone"
        ],
        "type": "object",
        "properties": {
          "phone": {
            "minLength": 1,
            "type": "string",
            "description": "number phone",
            "format": "tel"
          },
          "fullName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "fullname client"
          }
        },
        "additionalProperties": false,
        "description": "Data transfer object for user information."
      }
    }
  }
}